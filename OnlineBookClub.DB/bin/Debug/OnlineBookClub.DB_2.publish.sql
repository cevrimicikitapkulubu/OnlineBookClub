/*
Deployment script for OnlineBookClub

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "OnlineBookClub"
:setvar DefaultFilePrefix "OnlineBookClub"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL16.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [Auth].[Users].[asdsadsa] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [Auth].[Users])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping Check Constraint [Event].[CHK_EventParticipants_Rating]...';


GO
ALTER TABLE [Event].[EventParticipants] DROP CONSTRAINT [CHK_EventParticipants_Rating];


GO
PRINT N'Dropping Check Constraint [Event].[CHK_EventRatings_Rating]...';


GO
ALTER TABLE [Event].[EventRatings] DROP CONSTRAINT [CHK_EventRatings_Rating];


GO
PRINT N'Dropping Check Constraint [Event].[CHK_Events_ISBN]...';


GO
ALTER TABLE [Event].[Events] DROP CONSTRAINT [CHK_Events_ISBN];


GO
PRINT N'Dropping Check Constraint [Event].[CHK_EventSubjects]...';


GO
ALTER TABLE [Event].[EventSubjects] DROP CONSTRAINT [CHK_EventSubjects];


GO
PRINT N'Altering Table [Auth].[Users]...';


GO
ALTER TABLE [Auth].[Users] DROP COLUMN [asdsadsa];


GO
PRINT N'Creating Check Constraint [Event].[CHK_EventParticipants_Rating]...';


GO
ALTER TABLE [Event].[EventParticipants] WITH NOCHECK
    ADD CONSTRAINT [CHK_EventParticipants_Rating] CHECK ([Rating] BETWEEN 1 AND 5);


GO
PRINT N'Creating Check Constraint [Event].[CHK_EventRatings_Rating]...';


GO
ALTER TABLE [Event].[EventRatings] WITH NOCHECK
    ADD CONSTRAINT [CHK_EventRatings_Rating] CHECK ([Rating] BETWEEN 1 AND 5);


GO
PRINT N'Creating Check Constraint [Event].[CHK_Events_ISBN]...';


GO
ALTER TABLE [Event].[Events] WITH NOCHECK
    ADD CONSTRAINT [CHK_Events_ISBN] CHECK (ISBN NOT LIKE '%[^0-9]%' AND LEN(ISBN) = 13);


GO
PRINT N'Creating Check Constraint [Event].[CHK_EventSubjects]...';


GO
ALTER TABLE [Event].[EventSubjects] WITH NOCHECK
    ADD CONSTRAINT [CHK_EventSubjects] CHECK ([RowNumber] BETWEEN 1 AND 5);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
/*
r .\BindRule.sql
*/
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [Event].[EventParticipants] WITH CHECK CHECK CONSTRAINT [CHK_EventParticipants_Rating];

ALTER TABLE [Event].[EventRatings] WITH CHECK CHECK CONSTRAINT [CHK_EventRatings_Rating];

ALTER TABLE [Event].[Events] WITH CHECK CHECK CONSTRAINT [CHK_Events_ISBN];

ALTER TABLE [Event].[EventSubjects] WITH CHECK CHECK CONSTRAINT [CHK_EventSubjects];


GO
PRINT N'Update complete.';


GO
